version: "3.7"
services:

    agile:
        container_name: agile
        hostname: agile
        labels:
            description: Agile Data Science 2.0
            name: agile
        tty: true
        image: rjurney/agile_data_science:latest
        restart: on-failure
        user: root
        environment:
            JUPYTER_ENABLE_LAB: "yes"
            GRANT_SUDO: "yes"
            JUPYTER_ALLOW_INSECURE_WRITES: "true"
        depends_on:
            - elastic
            - mongo
            - mongo-express
        ports:
            - "8888:8888"
            - "5000:5000"
        volumes:
            - ./:/home/jovyan
        networks:
            - agile_net

    elastic:
        container_name: elastic
        hostname: elastic
        labels:
            description: Agile Data Science 2.0 Elastic
            name: elastic
        tty: True
        image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
        restart: always
        environment:
            cluster.name: "es-docker"
            discovery.type: single-node
            node.name: "elastic"
            ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
        ports:
            - "9200:9200"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elastic_data:/usr/share/elasticsearch/data
            - ./logs:/usr/share/elasticsearch/logs
        networks:
            - agile_net

    mongo:
        container_name: mongo
        hostname: mongo
        labels:
            description: Agile Data Science 2.0 MongoDB
            name: mongo
        image: mongo:5.0.3
        restart: always
        ports:
            - "27017:27017"
        volumes:
            - mongo_data:/data/db
        networks:
            - agile_net

    mongo-express:
        container_name: mongo-express
        hostname: mongo-express
        labels:
            description: Agile Data Science 2.0 Mongo Express
            name: mongo-express
        image: mongo-express:0.54.0
        depends_on:
            - mongo
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
        networks:
            - agile_net

    zookeeper:
        container_name: zookeeper
        hostname: zookeeper
        labels:
            description: Agile Data Science 2.0 ZooKeeper
            name: zookeeper
        image: wurstmeister/zookeeper
        ports:
            - "2181:2181"
        networks:
            - agile_net

    kafka:
        container_name: kafka
        hostname: kafka
        labels:
            description: Agile Data Science 2.0 Kafka
            name: kafka
        image: wurstmeister/kafka:2.12-2.0.1
        ports:
            - "9092:9092"
        environment:
            DOCKER_API_VERSION: 1.22
            KAFKA_ADVERTISED_HOST_NAME: localhost
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        networks:
            - agile_net
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    mlflow:
        image: mlflow/mlflow:latest  # Pull the official MLflow Docker image
        container_name: mlflow
        environment:
            - MLFLOW_TRACKING_URI=http://localhost:5000  # Track experiments locally
        ports:
            - "5000:5000"  # Expose the MLflow UI on port 5000
        volumes:
            - ./mlruns:/mlflow/mlruns  # Mount local directory to store experiment data
        command: mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root /mlflow/mlruns
        networks:
            - agile_net

    # postgres:
    #     image: postgres
    #     environment:
    #         - POSTGRES_USER=airflow
    #         - POSTGRES_PASSWORD=airflow
    #         - POSTGRES_DB=airflow
    #     networks:
    #         - airflow_net

    # scheduler:
    #     container_name: scheduler
    #     hostname: scheduler
    #     labels:
    #         description: Agile Data Science 2.0 Airflow 1.10.15 Scheduler
    #         name: scheduler
    #     image: apache/airflow:1.10.15
    #     command: init && scheduler
    #     restart: on-failure
    #     depends_on:
    #         - postgres
    #     env_file:
    #         - airflow.env
    #     volumes:
    #         - ./dags:/opt/airflow/dags
    #         - ./logs:/opt/airflow/logs
    #     networks:
    #         - airflow_net

    # webserver:
    #     container_name: webserver
    #     hostname: webserver
    #     labels:
    #         description: Agile Data Science 2.0 Airflow 1.10.15 Webserver
    #         name: webserver
    #     image: apache/airflow:1.10.15
    #     command: webserver
    #     restart: on-failure
    #     depends_on:
    #         - postgres
    #         - scheduler
    #     env_file:
    #         - airflow.env
    #     volumes:
    #         - ./dags:/opt/airflow/dags
    #         - ./logs:/opt/airflow/logs
    #         - ./scripts:/opt/airflow/scripts
    #     ports:
    #         - "8080:8080"
    #     networks:
    #         - airflow_net

volumes:
    elastic_data:
    mongo_data:

networks:
    agile_net:
        name: agile_net
        driver: bridge
    
    # airflow_net:
    #     name: airflow_net
    #     driver: bridge